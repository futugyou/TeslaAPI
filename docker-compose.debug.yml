services:
  teslaapiweb:
    image: teslaapiweb
    container_name: 'teslaapiweb'
    build:
      context: .
      dockerfile: src/Web/TeslaApi.Web/Dockerfile
    ports:
      - 5000:5000
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - dbmysql
      - garnet
      - rabbitmq
      - kafka
  dbmysql:
    container_name: 'dbmysql'
    image: mysql:8.3.0
    restart: always
    environment:
      MYSQL_DATABASE: 'test'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'admin'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - dbmysqlstorage:/var/lib/mysql
  mysqladminer:
    container_name: 'mysqladminer'
    image: adminer
    restart: always
    ports:
      - 8080:8080
  garnet:
    container_name: 'garnet'
    image: 'ghcr.io/microsoft/garnet'
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    # To avoid docker NAT, consider `host` mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    volumes:
      - garnetdata:/data
  rabbitmq:
    image: rabbitmq:3.13.2-management
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmqdata:/var/lib/rabbitmq/
        - rabbitmqlog:/var/log/rabbitmq
#     networks:
#         - rabbitmq_go_net
    
  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
# networks:
#   rabbitmq_go_net:
#     driver: bridge
volumes:
  dbmysqlstorage:
  garnetdata:
  rabbitmqdata:
  rabbitmqlog:
  kafka_data:
    driver: local
